% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_mod_summary.R
\name{table_mod_summary}
\alias{table_mod_summary}
\title{Table a model summary estimates}
\usage{
table_mod_summary(
  mod_list,
  main_or_sbgp = c("main", "sbgp"),
  common_or_random = c("common", "random"),
  prop_scaler = 1000
)
}
\arguments{
\item{mod_list}{A named list of models, or a single meta model.}

\item{main_or_sbgp}{Do you want to extract the main summary or subgroups?}

\item{common_or_random}{Do you want common or random effects parameters?}

\item{prop_scaler}{Only used when working with metaproportion or metarates, will express the result as x events per \code{prop_scaler} patients}
}
\description{
Shorthand to get results from one or more meta models as a data.frame
}
\details{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} The idea is to switch from a list of meta models, themselves lists, to an handy data.frame. At the moment, only works for metabin exports and metaprop "main" export. The function internally applies the core extraction to all items. A meta model does not incorporate much meta variables on what was summarized: the name of the list item is used and should be explicit enough to describe the whole setting (e.g. include adverse event name, type of data aggregation conservative/integrative, etc.)
}
\examples{
library(meta)

data <-
    data.frame(
      event = 4:1,
      n = c(5, 7, 8, 9),
      byvar = c("a", "a", "b", "b")
    )

 m1 <- metaprop(
    event = event,
    n = n,
    byvar = byvar,
    data = data
  )

table_mod_summary(m1)

# If you have a list of models, named them
 res_mod <-
   table_mod_summary(
     list(mod1 = m1)
   )
}
\keyword{data-extraction}
\keyword{meta-analysis}
