[{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"basic_workflow","text":"help manage adverse events aggregated datasets order perform safety meta-analysis.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"pre-requisites","dir":"Articles","previous_headings":"Purpose","what":"Pre-requisites","title":"basic_workflow","text":"Users assumed familiar principles meta-analysis. R (basic knowledge, good start can found ). PRISMA guidelines.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"what-the-package-does-not-cover","dir":"Articles","previous_headings":"Purpose","what":"What the package does not cover","title":"basic_workflow","text":"Safety meta-analysis individual patient level data.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"overview","dir":"Articles","previous_headings":"Purpose","what":"Overview","title":"basic_workflow","text":"package, find steps manage adverse events datasets, avoiding common pitfalls order provide accurate, reproducible workflows conducting safety meta-analysis.","code":""},{"path":[]},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"gather-safety-data-from-different-sources","dir":"Articles","previous_headings":"Usage","what":"Gather safety data from different sources","title":"basic_workflow","text":"According PRISMA Guidelines, events identification required screen potential sources information. includes direct contact authors, published data original manuscript, supplementary data, potential follow-studies, clinical trial registration websites, among others. sources provide data study, sources provide data study. choice required latter case, order retain relevant source. choose preferred source, several considerations may come mind: reliable source? source trusted ? straightforward answer question, discussion, sources prioritized according truthfulness. happens trivial question, guidelines establish hierarchical order among sources. Arguably, sources valuable research questions well. , simple features, can also help: source reports highest number patients? source highest number events? source longest follow-? process sorting sources topic-dependent likely meta-analysis-dependent, means sorting identical 2 different meta-analyses. importantly, authors aware sorting required processing data. dedicated time spend determine appropriate order. example, two different data sources can see, study id “NCT2” present sources. event “eczema” reported , number patients presenting event (column n_event_arm1) different: 10 patients src1, vs 9 src2 Also, sometime, src2 source provide data, study “NCT3”. source sorting, data regarded step step: 1 source data? yes, use source event 2 source doesn’t provide data event, 2 source ? yes, use 2. Etc. also implies study different events, always use source.","code":"e_data_src1 #>   source study_id              event_name n_event_arm1 n_arm1 #> 1   src1     NCT1   myocardial infarction            1     20 #> 2   src1     NCT1 acute coronary syndrome            2     20 #> 3   src1     NCT2   myocardial infarction            5     27 #> 4   src1     NCT2                  eczema           10     27  e_data_src2 #>   source study_id event_name n_event_arm1 n_arm1 #> 1   src2     NCT2     eczema            9     27 #> 2   src2     NCT2   pruritus            7     27 #> 3   src2     NCT3   pruritus           20     50"},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"sort-sources-by-yourself","dir":"Articles","previous_headings":"Usage > Gather safety data from different sources","what":"Sort sources by yourself","title":"basic_workflow","text":"decided source prioritize, can give data sort_sources() function. sort_sources() function take source_list_order argument, tells us priority among sources. first item source highest priority, second element next highest priority, . function adding integer column “src” initial dataset. helpful next step, gathering safety data.","code":"e_data <-    bind_rows(     e_data_src1,     e_data_src2     )  source_order <-    c(\"src1\", \"src2\") e_data_source <-   e_data |>    sort_sources(     method = \"source_list\",     source_name = \"source\",     source_list_order = source_order   )"},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"gather-events-into-terms","dir":"Articles","previous_headings":"Usage","what":"Gather events into terms","title":"basic_workflow","text":"sources sorted, events can gathered. medical condition can sometime defined several names. , use word term refer medical condition can several names. different names called events. “event” dataset contains one row per reaction, counts events per arm, n per arm, study_id column (see example). “term” combination one “events” (can SMQ, HLT, combination PT MedDRA, …). Lets take medical condition “myocardial infarction”. say patient myocardial infarction study reports myocardial infarction, also Sustained ST-elevation myocardial infarction, acute coronary syndrome. events can define term “myocardial infarction”. different studies (different centers study), term maybe reported one events interchangeably. patients reported one event, others another. capture events, setting-dictionary terms required. now named list, containing one element. element named term myocardial infarction, gathers possible events. can use group_events() function reorganize dataset events terms. Two interesting behaviors :","code":"t_groups <-    list(myocardial_infarction =           c(\"myocardial infarction\",            \"sustained st-elevation myocardial infarction\",            \"acute coronary syndrome\")   )  t_groups #> $myocardial_infarction #> [1] \"myocardial infarction\"                        #> [2] \"sustained st-elevation myocardial infarction\" #> [3] \"acute coronary syndrome\" e_data_source |>    group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm = \"n_arm1\",     event_name = \"event_name\",     study_id = \"study_id\"   ) #> # A tibble: 2 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <int> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            2     20 myocardial infarctio… #> 2     1 NCT2     myocardial_infarction            5     27 myocardial infarctio…"},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"the-e_data-dataset-has-been-turned-into-a-term-level-dataset-","dir":"Articles","previous_headings":"Usage > Gather events into terms","what":"The e_data dataset has been turned into a term-level dataset.","title":"basic_workflow","text":"Counts n_event_arm1 changed: instead two lines study NCT1, 1 2 events myocardial infarction acute coronary syndrome, now one line, 2 events. default behavior function, method named “conservative”. idea since events reported grouped counts, now always possible say patient first event (e.g. myocardial infarction) also presented second event (e.g. acute coronary syndrome). special cases, might want sum counts. ’s particularly true working rare events, join events (principle) overlap one . cases, “integrative” method perform sum. NCT1, now 3 events arm 1.","code":"e_data_source |>    group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm = \"n_arm1\",     event_name = \"event_name\",     study_id = \"study_id\",     method = \"integrative\"   ) #> # A tibble: 2 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <int> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            3     20 myocardial infarctio… #> 2     1 NCT2     myocardial_infarction            5     27 myocardial infarctio…"},{"path":"https://pharmacologie-caen.github.io/safetymeta/articles/basic_workflow.html","id":"data-from-most-relevant-source-has-been-retained","dir":"Articles","previous_headings":"Usage > Gather events into terms","what":"Data from most relevant source has been retained","title":"basic_workflow","text":"Lets capture another term study NCT2, eczema reported 2 different sources (src1, src2). Since sources prioritized sort_sources(), group_events() keep data src1. important note, source filtering group_events() term level. new example, one study, two events reported two sources. Since events identified one term t_groups, source highest priority (source 1 term “myocardial_infarction”, source 2 term “skin”), retained.","code":"t_groups <-    list(skin =           c(\"eczema\",            \"pruritus\")   )  e_data_source |>    group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm = \"n_arm1\",     event_name = \"event_name\",     study_id = \"study_id\"   ) #> # A tibble: 2 × 6 #>     src study_id term_name n_event_arm1 n_arm1 details_n_event_arm1 #>   <int> <chr>    <chr>            <dbl>  <dbl> <chr>                #> 1     1 NCT2     skin                10     27 eczema (10)          #> 2     2 NCT3     skin                20     50 pruritus (20) # load data t_groups, with the 2 previous groups data(t_groups)   e_s <-     data.frame(       study_id = c(\"NCT1\", \"NCT1\"),       event_name = c(\"myocardial infarction\",                      \"eczema\"),       src = c(1, 2),       n_event_arm1 = c(2, 15),       n_arm1 = c(20, 20)     )  e_s |>     group_events(       t_groups = t_groups,       n_event = \"n_event_arm1\",       n_arm = \"n_arm1\",       event_name = \"event_name\",       study_id = \"study_id\"     ) #> # A tibble: 2 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <dbl> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            2     20 myocardial infarctio… #> 2     2 NCT1     skin                            15     20 eczema (15)"},{"path":"https://pharmacologie-caen.github.io/safetymeta/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Charles Dolladille. Author, maintainer. Pierre-Marie Morice. Author. INSERM U1086 ANTICIPE. Copyright holder.           Universite de Caen Normandie, Caen, France Unite de pharmaco-epidemiologie. Copyright holder.           Service de pharmacologie, Centre Hospitalier Universitaire de Caen, Caen, France","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dolladille C, Morice P (2024). safetymeta: Conduct safety meta-analysis study-level data. R package version 0.2.1, https://pharmacologie-caen.github.io/safetymeta/.","code":"@Manual{,   title = {safetymeta: Conduct safety meta-analysis of study-level data},   author = {Charles Dolladille and Pierre-Marie Morice},   year = {2024},   note = {R package version 0.2.1},   url = {https://pharmacologie-caen.github.io/safetymeta/}, }"},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"safetymeta","dir":"","previous_headings":"","what":"Conduct safety meta-analysis of study-level data","title":"Conduct safety meta-analysis of study-level data","text":"goal safetymeta help manage adverse events aggregated datasets order perform safety meta-analysis. Visit package website","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Conduct safety meta-analysis of study-level data","text":"can install development version safetymeta GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pharmacologie-caen/safetymeta\")"},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"pre-requisites","dir":"","previous_headings":"","what":"Pre-requisites","title":"Conduct safety meta-analysis of study-level data","text":"Users assumed familiar principles meta-analysis. R (basic knowledge, good start can found ). PRISMA guidelines.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"what-the-package-does-not-cover","dir":"","previous_headings":"","what":"What the package does not cover","title":"Conduct safety meta-analysis of study-level data","text":"Safety meta-analysis individual patient level data.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Conduct safety meta-analysis of study-level data","text":"package, find steps manage adverse events datasets, avoiding common pitfalls order provide accurate, reproducible workflows conducting safety meta-analysis.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Conduct safety meta-analysis of study-level data","text":"","code":"library(safetymeta)"},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"define-priority-among-safety-data-sources","dir":"","previous_headings":"","what":"Define priority among safety data sources","title":"Conduct safety meta-analysis of study-level data","text":"","code":"source_order <-    c(\"src1\", \"src2\")  e_data_source <-   e_data |>    sort_sources(     method = \"source_list\",     source_name = \"source\",     source_list_order = source_order   )"},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"group-events-into-terms","dir":"","previous_headings":"","what":"Group events into terms","title":"Conduct safety meta-analysis of study-level data","text":"","code":"e_data_source |>    group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm = \"n_arm1\",     event_name = \"event_name\",     study_id = \"study_id\"   ) #> # A tibble: 4 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <int> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            2     20 myocardial infarctio… #> 2     1 NCT2     myocardial_infarction            5     27 myocardial infarctio… #> 3     1 NCT2     skin                            10     27 eczema (10)           #> 4     2 NCT3     skin                            20     50 pruritus (20)"},{"path":"https://pharmacologie-caen.github.io/safetymeta/index.html","id":"website-vignettes","dir":"","previous_headings":"","what":"Website, vignettes","title":"Conduct safety meta-analysis of study-level data","text":"best place browse package documentation website can also look “basic_workflow” vignette.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/cff.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast formatting of numbers (internal) — cff","title":"Fast formatting of numbers (internal) — cff","text":"formatting function consistent number reporting.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/cff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast formatting of numbers (internal) — cff","text":"","code":"cff(num, low_ci, up_ci, dig = 0, method = c(\"num_only\", \"num_ci\", \"ci\"))"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/cff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast formatting of numbers (internal) — cff","text":"num numeric. number format. low_ci numeric. Lower end confidence interval up_ci numeric. Upper end confidence interval dig numeric. Number digits method sort printing need? (see Details)","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/cff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast formatting of numbers (internal) — cff","text":"Set method according printing like: unique number num_only (default), number confidence interval num_ci, ci (example range time onset) function properly returns NA input missing.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/cff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast formatting of numbers (internal) — cff","text":"","code":"num <- c(0.1, 0.02, 1.658)  safetymeta:::cff(num) #> [1] \"0\" \"0\" \"2\"  safetymeta:::cff(num, dig = 2) #> [1] \"0.10\" \"0.02\" \"1.66\"  safetymeta:::cff(num = num[[1]],      low_ci = num[[2]],      up_ci = num[[3]],      method = \"num_ci\",      dig = 2) #> [1] \"0.10 (0.02-1.66)\""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of safety meta-analysis. — e_data","title":"Data of safety meta-analysis. — e_data","text":"Safety meta-analysis aggregated datasets rely 2 major compounds: study-level data, event-level data. data management process, event-level data grouped according safety terms, becomes term-level data. study-level data begin s_. s_data study-level data, including total number subjects study arm, aggregated features (median age, median follow-) event-level data begin e_. e_data_src* event-level dataset specific source (src1, src2) e_data      event-level dataset, sources reconciled. term-level data begin t_. t_groups    named list. Names terms, contents events composing term.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of safety meta-analysis. — e_data","text":"","code":"data(e_data)  e_data_src1  e_data_src2  t_groups  s_data"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of safety meta-analysis. — e_data","text":"object class data.frame. object class data.frame 4 rows 5 columns. object class data.frame 3 rows 5 columns. object class list length 2. object class data.frame 3 rows 4 columns.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data of safety meta-analysis. — e_data","text":"None","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data of safety meta-analysis. — e_data","text":"none","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/e_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data of safety meta-analysis. — e_data","text":"","code":"data(e_data) e_data[e_data$study_id == \"NCT1\", ] #>   source study_id              event_name n_event_arm1 n_arm1 #> 1   src1     NCT1   myocardial infarction            1     20 #> 2   src1     NCT1 acute coronary syndrome            2     20"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Group events of a common term group — group_events","title":"Group events of a common term group — group_events","text":"Allows prioritization event data, aggregating multiples terms group term (see integrative conservative methods).","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group events of a common term group — group_events","text":"","code":"group_events(   .data,   t_groups,   n_event,   n_arm = NULL,   event_name,   study_id,   src = \"src\",   method = c(\"conservative\", \"integrative\"),   add_zero = FALSE )"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group events of a common term group — group_events","text":".data event data.frame (see details) t_groups Named list terms. Names terms, contents event names (see description). n_event Character vector, column number events study arms (e.g. placebo...). n_arm Optional, character vector, column number patients study arms. event_name Character string, column events name. study_id Character string, column main study ID src Character vector, column source sorting sort_sources. method \"integrative\" \"conservative\" (see details). add_zero wish count O events study(ies) without events term? (see description)","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group events of a common term group — group_events","text":"Special attributes output data.table group_method (conservative integrative) group_term event n used subsequent functions create single dataset multiple arms.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group events of a common term group — group_events","text":"See vignette(\"basic_workflow\", package = \"safetymeta\") details \"event\" \"term\" definition. function, can group multiple events corresponding term. t_groups list provides one terms name(s). Integrative method means counts event term summed together, conservative means event highest count selected. add_zero used event reported study (e.g., event line dataset). principle since serious events must reported, absence reporting equal reporting 0 events. true safety data available (.e., data event available sources). Thus, specific studies must excluded prior using group_events. total counts homogeneous given study, depending reaction (notably found cause mortality reaction). maximum count retained line study(ies), (add_zero performs). group_events assumes events .data[[\"events\"]] LOWER cased.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/group_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group events of a common term group — group_events","text":"","code":"# You are very much advised to check string case over t_groups # and .data[[\"event_name\"]] col. All should be lower cased +++  source_order <- c(\"src1\", \"src2\")  # set src before using group_events e_data <-   e_data |>   sort_sources(     method = c(\"source_list\"),     source_name = \"source\",     source_list_order = source_order   )  # The integrative method  e_data |>   group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm     = \"n_arm1\",     event_name = \"event_name\",     study_id   = \"study_id\",     method = \"integrative\"   ) #> # A tibble: 4 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <int> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            3     20 myocardial infarctio… #> 2     1 NCT2     myocardial_infarction            5     27 myocardial infarctio… #> 3     1 NCT2     skin                            10     27 eczema (10)           #> 4     2 NCT3     skin                            20     50 pruritus (20)          # Contrasting with the conservative method   e_data |>   group_events(     t_groups = t_groups,     n_event = \"n_event_arm1\",     n_arm     = \"n_arm1\",     event_name = \"event_name\",     study_id   = \"study_id\",     method = \"conservative\"   ) #> # A tibble: 4 × 6 #>     src study_id term_name             n_event_arm1 n_arm1 details_n_event_arm1  #>   <int> <chr>    <chr>                        <dbl>  <dbl> <chr>                 #> 1     1 NCT1     myocardial_infarction            2     20 myocardial infarctio… #> 2     1 NCT2     myocardial_infarction            5     27 myocardial infarctio… #> 3     1 NCT2     skin                            10     27 eczema (10)           #> 4     2 NCT3     skin                            20     50 pruritus (20)"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/nice_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Nice printing of p-values (internal) — nice_p","title":"Nice printing of p-values (internal) — nice_p","text":"formatting function consistent p-value reporting.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/nice_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nice printing of p-values (internal) — nice_p","text":"","code":"nice_p(p_val, print_zero = FALSE)"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/nice_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nice printing of p-values (internal) — nice_p","text":"p_val numeric. p-value format. print_zero logical. leading zero printed? (see Details)","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/nice_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nice printing of p-values (internal) — nice_p","text":"can choose print leading zero (e.g. 0.01) (e.g. .01) print_zero.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/nice_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nice printing of p-values (internal) — nice_p","text":"","code":"pvals <-   c(0.056548, 0.0002654, 0.816546, 0.0493321) safetymeta:::nice_p(pvals) #> [1] \".06\"   \"<.001\" \".82\"   \".049\"   safetymeta:::nice_p(pvals, print_zero = TRUE) #> [1] \"0.06\"   \"<0.001\" \"0.82\"   \"0.049\""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/safetymeta-package.html","id":null,"dir":"Reference","previous_headings":"","what":"safetymeta: Conduct safety meta-analysis of study-level data — safetymeta-package","title":"safetymeta: Conduct safety meta-analysis of study-level data — safetymeta-package","text":"Guidance data management steps safety events, obtained different sources (manuscripts, clinical trial registration platforms), grouping safety terms.","code":""},{"path":[]},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/safetymeta-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"safetymeta: Conduct safety meta-analysis of study-level data — safetymeta-package","text":"Maintainer: Charles Dolladille cdolladille@hotmail.com (ORCID) Authors: Pierre-Marie Morice (ORCID) contributors: INSERM U1086 ANTICIPE (Universite de Caen Normandie, Caen, France) [copyright holder] Unite de pharmaco-epidemiologie (Service de pharmacologie, Centre Hospitalier Universitaire de Caen, Caen, France) [copyright holder]","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Define source order — sort_sources","title":"Define source order — sort_sources","text":"Prioritize multiple sources, according criteria","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define source order — sort_sources","text":"","code":"sort_sources(   .data,   method = c(\"source_list\", \"max_n\"),   source_name = NULL,   source_list_order = NULL,   study_id = NULL,   study_n = NULL )"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define source order — sort_sources","text":".data study- event-level dataset @seealso e_data method Character string, one \"source_list\", \"max_n\". See description. source_name Optional, character string, column sources source_list_order Optional, character vector, order sources. study_id Optional, study identifier. study_n Optional, character string, column numbers (patients).","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define source order — sort_sources","text":"original .data dataset, additional src numeric column.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define source order — sort_sources","text":"multiples sources report safety data event, prioritized among , order retain source highest priority event. source sorting decided use source_list method. method, dataset column source_name, provide order source_list_order argument. first element source_list_order highest priority source, second element next highest priority, . want sort sources according highest number patients study_arm (number), use method max_n, provide study_id study_n arguments.","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/sort_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define source order — sort_sources","text":"","code":"# Source order is already known, then use method \"source_list\"   source_order <- c(\"src1\", \"src2\")   e_data |>    sort_sources(      method = c(\"source_list\"),      source_name = \"source\",      source_list_order = source_order    ) #>   source study_id              event_name n_event_arm1 n_arm1 src #> 1   src1     NCT1   myocardial infarction            1     20   1 #> 2   src1     NCT1 acute coronary syndrome            2     20   1 #> 3   src1     NCT2   myocardial infarction            5     27   1 #> 4   src1     NCT2                  eczema           10     27   1 #> 5   src2     NCT2                  eczema            9     27   2 #> 6   src2     NCT2                pruritus            7     27   2 #> 7   src2     NCT3                pruritus           20     50   2   # Sources with higher total number in arm1 have highest priority     e_data_maxn <-       e_data |>         dplyr::select(study_id, n_arm1) |>         dplyr::add_row(           study_id = \"NCT1\",           n_arm1   = 30         )    e_data_maxn |>   sort_sources(     method = c(\"max_n\"),     study_n = \"n_arm1\",     study_id = \"study_id\"     ) #>   study_id n_arm1 src #> 1     NCT1     20   2 #> 2     NCT1     20   2 #> 3     NCT2     27   1 #> 4     NCT2     27   1 #> 5     NCT2     27   1 #> 6     NCT2     27   1 #> 7     NCT3     50   1 #> 8     NCT1     30   1"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/table_mod_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Table a model summary estimates — table_mod_summary","title":"Table a model summary estimates — table_mod_summary","text":"Shorthand get results one meta models data.frame","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/table_mod_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table a model summary estimates — table_mod_summary","text":"","code":"table_mod_summary(   mod_list,   main_or_sbgp = c(\"main\", \"sbgp\"),   common_or_random = c(\"common\", \"random\"),   prop_scaler = 1000 )"},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/table_mod_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table a model summary estimates — table_mod_summary","text":"mod_list named list models, single meta model. main_or_sbgp want extract main summary subgroups? common_or_random want common random effects parameters? prop_scaler used working metaproportion metarates, express result x events per prop_scaler patients","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/table_mod_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table a model summary estimates — table_mod_summary","text":"idea switch list meta models, lists, handy data.frame. moment, works metabin exports metaprop \"main\" export. function internally applies core extraction items. meta model incorporate much meta variables summarized: name list item used explicit enough describe whole setting (e.g. include adverse event name, type data aggregation conservative/integrative, etc.)","code":""},{"path":"https://pharmacologie-caen.github.io/safetymeta/reference/table_mod_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table a model summary estimates — table_mod_summary","text":"","code":"library(meta) #> Loading required package: metadat #> Loading 'meta' package (version 7.0-0). #> Type 'help(meta)' for a brief overview. #> Readers of 'Meta-Analysis with R (Use R!)' should install #> older version of 'meta' package: https://tinyurl.com/dt4y5drs  data <-     data.frame(       event = 4:1,       n = c(5, 7, 8, 9),       byvar = c(\"a\", \"a\", \"b\", \"b\")     )   m1 <- metaprop(     event = event,     n = n,     byvar = byvar,     data = data   )  table_mod_summary(m1) #>       analysis mod_name event  n n stud/I2     Proportion (95%CI)      per #> 1 main outcome      mod    10 29     4/47% 344.83 (196.62-530.93) 1000 pts #>    method_sm_effects TE.random lower.random upper.random k        I2 #> 1 GLMM PLOGIT common 0.3448276    0.1966169    0.5309271 4 0.4681994  # If you have a list of models, named them  res_mod <-    table_mod_summary(      list(mod1 = m1)    )"},{"path":[]},{"path":"https://pharmacologie-caen.github.io/safetymeta/news/index.html","id":"patch-0-2-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"safetymeta 0.2.1","text":"Codecov 100%, add test internal nice_p() function","code":""},{"path":[]},{"path":"https://pharmacologie-caen.github.io/safetymeta/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"safetymeta 0.2.0","text":"Experimental add table_mod_summary(), collect data meta model, created package meta.","code":""},{"path":[]},{"path":"https://pharmacologie-caen.github.io/safetymeta/news/index.html","id":"patchs-0-1-1","dir":"Changelog","previous_headings":"","what":"Patchs","title":"safetymeta 0.1.1","text":"Fixing documentation, syncing codecov, readme.","code":""},{"path":[]}]
